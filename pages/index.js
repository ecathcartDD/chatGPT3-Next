import Head from "next/head";
import styles from "@/styles/Home.module.css";
import { Button, Form, Spinner } from "react-bootstrap";
import { FormEvent, useState } from "react";

export default function Home() {
  const [quote, setQuote] = useState("");
  const [quoteLoading, setQuoteLoading] = useState(false);
  const [quoteLoadingError, setQuoteLoadingError] = useState(false);

  const handleSubmit = async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target);
    const prompt = formData.get("prompt")?.toString().trim();

    if (prompt) {
      try {
        setQuote("");
        setQuoteLoadingError(false);
        setQuoteLoading(true);
        const response = await fetch(
          "/api/hello?prompt=" + encodeURIComponent(prompt)
        );
        const body = await response.json();
        setQuote(body.quote);
      } catch (error) {
        console.log(error);
        setQuoteLoadingError(true);
      } finally {
        setQuoteLoading(false);
      }
    }
  };

  const NewlineText = (props) => {
    const text = props.text;
    return text.split("\n").map((str) => <p>{str}</p>);
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1>My AI Playlist Generator ðŸ¤–ðŸŽ¼</h1>
        <h2>Powered by chatGPT-3</h2>
        <Form onSubmit={handleSubmit} className={styles.inputForm}>
          <Form.Group className="mb-3" controlId="prompt-input">
            <Form.Label>
              <h3>
                Enter a Song Name and chatGPT-3 will generate you a playlist:
              </h3>
            </Form.Label>
            <Form.Control name="prompt" maxLength={100}></Form.Control>
          </Form.Group>
          <Button type="submit" className="mb-3">
            Submit
          </Button>
        </Form>
        {quoteLoading && <Spinner />}
        {quoteLoadingError && (
          <div className="alert alert-danger">
            {"Something went wrong. Please try again"}
          </div>
        )}
        {quote && (
          <div className="fw-semibold fs-5">
            <NewlineText text={quote} />
          </div>
        )}
      </main>
    </>
  );
}
